name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '9.0.x'

      - name: Install dependencies
        run: dotnet restore OneAnother/src/Web/Web.csproj

      - name: Build
        run: dotnet build --configuration Release --no-restore OneAnother/src/Web/Web.csproj

      - name: Publish
        run: dotnet publish --configuration Release --output ./publish --no-build OneAnother/src/Web/Web.csproj

      - name: Zip published files
        run: zip -r myapp.zip ./publish

      - name: Deploy to Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws elasticbeanstalk create-application-version --application-name my-dotnet-app --version-label v1 --source-bundle S3Bucket=${{ secrets.AWS_S3_BUCKET }},S3Key=myapp.zip
          aws elasticbeanstalk update-environment --application-name my-dotnet-app --environment-name my-dotnet-env --version-label v1

      - name: Retrieve S3 bucket name
        id: get_s3_bucket
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          S3_BUCKET=$(aws cloudformation describe-stacks --stack-name my-cloudformation-stack --query "Stacks[0].Outputs[?OutputKey=='S3BucketName'].OutputValue" --output text)
          echo "S3_BUCKET=$S3_BUCKET" >> $GITHUB_ENV

      - name: Upload to S3
        run: aws s3 cp myapp.zip s3://$S3_BUCKET/myapp.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_REGION }}