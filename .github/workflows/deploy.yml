name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '9.0.x'

      - name: Install dependencies
        run: dotnet restore OneAnother/src/Web/Web.csproj

      - name: Build
        run: dotnet build --configuration Release --no-restore OneAnother/src/Web/Web.csproj

      - name: Publish
        run: dotnet publish --configuration Release --output ./publish --no-build OneAnother/src/Web/Web.csproj

      - name: Zip published files
        run: zip -r myapp.zip ./publish

      - name: Create S3 bucket if not exists
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: ${{ secrets.AWS_REGION }}
        run: |
          aws s3api head-bucket --bucket ${{ secrets.AWS_S3_BUCKET }} || aws s3api create-bucket --bucket ${{ secrets.AWS_S3_BUCKET }} --region ${{ secrets.AWS_REGION }} --create-bucket-configuration LocationConstraint=${{ secrets.AWS_REGION }}

      - name: Upload to S3
        run: aws s3 cp myapp.zip s3://${{ secrets.AWS_S3_BUCKET }}/myapp.zip
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: ${{ secrets.AWS_REGION }}

      - name: Deploy CloudFormation stack
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
          AWS_REGION: ap-southeast-2
        run: |
          aws cloudformation deploy \
            --template-file OneAnother/.aws/cloudformation.yaml \
            --stack-name my-cloudformation-stack \
            --capabilities CAPABILITY_NAMED_IAM \
            --parameter-overrides \
              VPC=$VPC_ID \
              DBUser=${{ secrets.DB_USER }} \
              DBPassword=${{ secrets.DB_PASSWORD }} \
              DBName=${{ secrets.DB_NAME }}